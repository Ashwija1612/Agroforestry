# -*- coding: utf-8 -*-
"""Agroforestry.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11f_qrqTJnnyJ1GS1xQ8Q2VI-v7w9C0Xs

We will be using a linear regression model to demonstrate the relation between the increase in the forest cover area and the improvement in the weather conditions.
As a first step, we will be importing the necessary libraries
"""

import numpy as np
import pandas as pd

import matplotlib.pyplot as plt  
from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression
from sklearn import metrics

"""Reading the 'Datasets for hackathon.csv' file to the program. the csv file is the combination of the datasets available in the official website of the Telangana Government: https://data.telangana.gov.in/about-open-data-telangana
The csv file has been uploaded to the notebook from the computer system.
"""

data_frame = pd.read_csv('/content/Datasets for hackathon - Sheet1.csv')

data_frame.columns

"""Taking into consideration the required attributes and discarding the rest."""

subset_data_frame = data_frame[['Districts', 'Forest Cover (Sq. Kms.)', 'Percentage of Forest Cover',
       'Site Registered', 'Plants Planted', 'Small', 'Medium', 'Large', 'rain', 'temp_min',
       'temp_max', 'humidity_min', 'humidity_max', 'wind_speed_max',
       'wind_speed_min']]

subset_data_frame

"""One hot encoding of the district names for readability and easy implementation"""

one_hot_encoded = pd.get_dummies(subset_data_frame['Districts'])

print(one_hot_encoded)

subset_data_frame = subset_data_frame.join(one_hot_encoded)

subset_data_frame

subset_data_frame = subset_data_frame.drop('Districts', axis=1)
subset_data_frame

"""Seperating the attributes for the data and result parameters."""

data_column = ['Forest Cover (Sq. Kms.)', 'Percentage of Forest Cover',  'Plants Planted', 'Site Registered', 'Small', 'Medium', 'Large']
result_column =['rain', 'temp_min', 'temp_max', 'humidity_min', 'humidity_max', 'wind_speed_max', 'wind_speed_min']

"""In the below code cell, we assign these parameters for our training data set"""

X_train, Y_train = (subset_data_frame[data_column], subset_data_frame[result_column])

"""Applying the linear regression model on the training set"""

regression = LinearRegression()
regression.fit(X_train, Y_train)

print(regression.intercept_)
print(regression.coef_)

y_pred = regression.predict(X_train)

#print(y_pred)

"""Now, we apply the above linear regression model on the test dataset developed considering the increase in the Forest Cover (Sq. Kms.), Percentage of Forest Cover, Plants Planted, Site Registered by 10%. Through this we want to find the relationship between the forest and the improved climatic conditions in each district of the Telangana state."""

test_data_set = pd.read_csv('/content/increased_dataset - Sheet1 - increased_dataset - Sheet1.csv')

test_data_set.columns

subset_test_data_frame = data_frame[['Districts', 'Forest Cover (Sq. Kms.)', 'Percentage of Forest Cover',
       'Site Registered', 'Plants Planted', 'Small', 'Medium', 'Large']]

subset_test_data_frame

one_hot_encoded = pd.get_dummies(subset_test_data_frame['Districts'])

print(one_hot_encoded)

subset_test_data_frame = subset_test_data_frame.join(one_hot_encoded)

subset_test_data_frame

subset_test_data_frame = subset_test_data_frame.drop('Districts', axis=1)
subset_test_data_frame

y_result = regression.predict(subset_test_data_frame[data_column])

print(y_result)

print(type(y_result))

plt.plot(y_result)

plt.plot(y_pred)

